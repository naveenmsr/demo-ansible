## copies required ssh key into server to download git repositories 
- name: copy ssh private key
  copy: 
    src: "{{ privateKeySourcepath }}"
    dest: "{{ privateKeyDestinationpath }}"
    mode: 0600
## dowloads hashcloud-infra repository from git
- name: Cloning hashcloud-infra repository
  git:
    repo: "{{ hashcloudInfraRepository }}" 
    dest: "{{ hashcloudInfraRepoDestPath }}"
    accept_hostkey: yes
    key_file: "{{ hashcloud_server_testing_privatekeypath }}"
## downloads pyhashcloud-processor repository from git    
- name: cloneing pyhashcloud-processor repository
  git:
    repo: "{{ pyhashcloudProcessorRepository }}"
    dest: "{{ pyhashcloudProcessorRepoDestPath }}"
    accept_hostkey: yes
    key_file: "{{ hashcloud_server_testing_privatekeypath }}"
## downloads secrets repository into already downloaded pyhashcloud-processor repository.
- name: Cloning the secrets repositor
  git:
    repo: "{{ pyhashcloudProcessorSecretsRepo }}"
    dest: "{{ pyhashcloudProcessorSecretsRepoDest }}"
    accept_hostkey: yes
    key_file: "{{ hashcloud_server_testing_privatekeypath }}"
## installs requirements and launchs screens for netCreator.py and netDeleter.
- name: Python Cloud Creator Under Progress and Running the Python Cloud Deletor in background
  shell: | 
    cd pyhashcloud-processor
    pip3 install -r requirements.txt
    sleep 2 
    screen -dm -S PYTHONNETCREATOR python3 netCreator.py production
    sleep 2
    screen -dm -S PYTHONNETDELETOR python3 netDeleter.py production

#downloads hashcloud-webapp repository from git hub 

- name: Clone the hashcloud-webapp repository
  git:
    repo: "{{ hashcloudWebAppRepository }}"
    dest: "{{ hashcloudWebAppRepositoryDest }}"
    accept_hostkey: yes
    key_file: "{{ hashcloud_server_testing_privatekeypath }}"

# downloads secrets repository 

- name: Cloning the secrets repository
  git:
    repo: "{{ hashcloudWebAppSecretsRepository }}"
    dest: "{{ hashcloudWebAppSecretsRepoDest }}"
    accept_hostkey: yes
    key_file: "{{ hashcloud_server_testing_privatekeypath }}"

# dowloads required packages from package.json and launches NODESERVER

- name: Running the Node Server in the background
  shell: |
    cd ~/hashcloud-webapp
    npm install
    screen -dm -S NODESERVER npm run server

# generetes rsa keys 

- name: Generating the RSA keys with fd name
  shell: |
    ssh-keygen -t rsa -f fd -P ""
    cat ~/.ssh/fd.pub >> ~/.ssh/authorized_keys
  args:
    chdir: ~/.ssh
    creates: ~/authorizedkeyscreated